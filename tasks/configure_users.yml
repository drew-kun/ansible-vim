---
# Create a directory ~/.vim.local in order not to pollute home directory
- name: "[user] Create {{ vim_root_cust_conf_dir }} directory for custom configuration content"
  file: path="{{ vim_root_cust_conf_plugin_dir }}" state=directory
  become: yes    # Required for become_user to work
  #become_method: su  # only good for root user to become another user when sudo package is not available
  become_user: "{{ item }}"
  with_items: "{{ vim_users }}"
  tags: vim

- name: "[user] Generating {{ vim_root_config }} from template"
  template:
    src: vimrc.j2
    dest: "{{ vim_root_config }}"
    owner: "{{ item }}"
    group: "{{ item if ansible_os_family != 'Darwin' else 'wheel' if item == 'root' else 'staff' }}"
    mode: 0644
  with_items: "{{ vim_users }}"
  #when: (vim_users is defined and item != "root")
  when: vim_users is defined
  become: yes
  become_user: "{{ item }}"
  tags: vim

- name: "[user] Generating {{ vim_root_bundles }} from template"
  template:
    src: vimrc.bundles.j2
    dest: "{{ vim_root_bundles }}"
    owner: "{{ item }}"
    group: "{{ item if ansible_os_family != 'Darwin' else 'wheel' if item == 'root' else 'staff' }}"
    mode: 0644
  with_items: "{{ vim_users }}"
  when: vim_users is defined
  become: yes
  become_user: "{{ item }}"
  tags: vim

# CONFIGURE PLUGINS
- name: "[user] Generating {{ vim_root_emoji }} from template"
  template:
    src: vimrc.emoji.j2
    dest: "{{ vim_root_emoji }}"
    owner: "{{ item }}"
    group: "{{ item if ansible_os_family != 'Darwin' else 'wheel' if item == 'root' else 'staff' }}"
    mode: 0644
  with_items: "{{ vim_users }}"
  become: yes
  become_user: "{{ item }}"
  when: vim_users is defined and "junegunn/vim-emoji" in vim_github_plugins
  tags: vim

- name: "[user] Generating {{ vim_root_syntastic }} from template"
  template:
    src: vimrc.syntastic.j2
    dest: "{{ vim_root_syntastic }}"
    owner: "{{ item }}"
    group: "{{ item if ansible_os_family != 'Darwin' else 'wheel' if item == 'root' else 'staff' }}"
    mode: 0644
  with_items: "{{ vim_users }}"
  become: yes
  become_user: "{{ item }}"
  when: vim_users is defined and "vim-syntastic/syntastic" in vim_github_plugins
  tags: vim

- name: "[user] Generating {{ vim_root_airline }} from template"
  template:
    src: vimrc.airline.j2
    dest: "{{ vim_root_airline }}"
    owner: "{{ item }}"
    group: "{{ item if ansible_os_family != 'Darwin' else 'wheel' if item == 'root' else 'staff' }}"
    mode: 0644
  with_items: "{{ vim_users }}"
  become: yes
  become_user: "{{ item }}"
  when: vim_users is defined and "vim-airline/vim-airline" in vim_github_plugins
  tags: vim

- name: "[user] Generating {{ vim_root_command_t }} from template"
  template:
    src: vimrc.command-t.j2
    dest: "{{ vim_root_command_t }}"
    owner: "{{ item }}"
    group: "{{ item if ansible_os_family != 'Darwin' else 'wheel' if item == 'root' else 'staff' }}"
    mode: 0644
  with_items: "{{ vim_users }}"
  become: yes
  become_user: "{{ item }}"
  when: vim_users is defined and "wincent/command-t" in vim_github_plugins
  tags: vim

- name: "[user] Generating {{ vim_root_devicons }} from template"
  template:
    src: vimrc.devicons.j2
    dest: "{{ vim_root_devicons }}"
    owner: "{{ item }}"
    group: "{{ item if ansible_os_family != 'Darwin' else 'wheel' if item == 'root' else 'staff' }}"
    mode: 0644
  with_items: "{{ vim_users }}"
  become: yes
  become_user: "{{ item }}"
  when: vim_users is defined and "ryanoasis/vim-devicons" in vim_github_plugins
  tags: vim

- name: '[user] Copying .vim folder to ~/.vim'
  copy:
    src: vim/
    dest: ~/.vim/
    owner: "{{ item }}"
    group: "{{ item if ansible_os_family != 'Darwin' else 'wheel' if item == 'root' else 'staff' }}"
  with_items: "{{ vim_users }}"
  when: vim_users is defined
  become: yes
  become_user: "{{ item }}"
  tags: vim

- name: '[user] Set EDITOR and TERM environment variables'
  blockinfile:
    path: ~/.bashrc
    follow: yes
    owner: "{{ item }}"
    group: "{{ item }}"
    content: |
      export EDITOR="/usr/bin/vim"
      export TERM="xterm-256color"  # For vim colors in tmux
    marker: "# {mark} ======== VIM role: Ansible managed block ========="
  become: yes
  become_user: "{{ item }}"
  with_items: "{{ vim_users }}"
  when: ansible_os_family != 'Darwin'
  tags: vim

- name: '[user] Installing Vundle'
  git: repo=https://github.com/gmarik/Vundle.vim.git dest=~/.vim/bundle/Vundle.vim version="{{ vim_vundle_version }}"
  with_items: "{{ vim_users }}"
  when: vim_users is defined
  become: yes
  become_user: "{{ item }}"
  tags: vim

# IF this task just hangs, when using:
#   command: "vim +PluginInstall +qal"
#
# this may be because of two things:
#   EITHER .vimrc or .vim files permissions (see 'which sudo' and become_method: su )
#   OR errors in .vimrc
#
# For troubleshooting run the following command on the target host:
#   vim -E -s -c "source ~/.vimrc" -c PluginInstall -c qa -V
- name: '[user] Downloading plugins'
  command: 'vim -E -s -c "source ~/.vimrc" -c PluginInstall -c qa'
  register: vim_plugins_result
  failed_when: vim_plugins_result.rc > 1
  with_items: "{{ vim_users }}"
  when: vim_users is defined
  become: yes
  become_user: "{{ item }}"
  tags: vim
...
