---
- name: '[cleanup] finding old vim configs /etc/vim/ and /root/'
  find:
    file_type: any
    paths: [ '/root/', '/etc/vim/' ]
    patterns: 'vimrc.*,.vim*'
    hidden: yes
  register: sys_vim_cfg_files
  become: yes
  tags:
  - vim
  - vim_cleanup

- name: '[cleanup] removing old vim configuration from /etc/vim/ and /root/'
  file: path="{{ item.path }}" state=absent
  become: yes
  with_items: "{{ sys_vim_cfg_files.files }}"
  tags:
  - vim
  - vim_cleanup

- name: '[cleanup] finding old vim configs in ~/ for all users'
  find: file_type=any paths=~/ patterns='.vim*' hidden=yes
  register: user_vim_cfg_files
  become: yes
  become_user: "{{ item }}"
  become_method: su
  with_items: "{{ vim_users }}"
  when: (vim_env == 'user' or vim_env == 'users') and vim_users is defined
  tags:
  - vim
  - vim_cleanup

- name: '[cleanup] removing old vim configuration'
  file: path="{{ item }}" state=absent
  become: yes
  with_items:
    # https://stackoverflow.com/questions/46516649/ansible-register-find-module-return-values-in-a-loop-and-extract-the-path-prop
    # FLATTENING THE EXISTING DICTIONARY AND TURNING IT TO A LIST OF FILE PATHS:
    - "{{ user_vim_cfg_files.results | sum(attribute='files', start=[]) | map(attribute='path') | list }}"
  when:
  - vim_users is defined
  - vim_env == 'user' or
    vim_env == 'users'
  tags:
  - vim
  - vim_cleanup
...
