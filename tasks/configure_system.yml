---
- name: '[system] Generating /etc/vim/vimrc.local from template'
  template: src=vimrc.j2 dest="{{ vim_root_config }}" owner=root group=root mode=0644
  become: yes
  tags: vim

- name: '[system] Generating /etc/vim/vimrc.bundles from template'
  template: src=vimrc.bundles.j2 dest="{{ vim_root_bundles }}" owner=root group=root mode=0644
  become: yes
  tags: vim

- name: "[system] Generating {{ vim_root_emoji }} from template"
  template: src=vimrc.emoji.j2 dest="{{ vim_root_emoji }}" owner=root group=root mode=0644
  become: yes
  when: '"junegunn/vim-emoji" in vim_github_plugins' # no need to use "{{ }}" in "when" conditions (Jinja2 feature)
  tags: vim

- name: "[system] Generating {{ vim_root_syntastic }} from template"
  template: src=vimrc.syntastic.j2 dest="{{ vim_root_syntastic }}" owner=root group=root mode=0644
  become: yes
  when: '"vim-syntastic/syntastic" in vim_github_plugins'
  tags: vim

- name: "[system] Generating {{ vim_root_airline }} from template"
  template: src=vimrc.airline.j2 dest="{{ vim_root_airline }}" owner=root group=root mode=0644
  become: yes
  when: '"vim-airline/vim-airline" in vim_github_plugins'
  tags: vim

- name: "[system] Generating {{ vim_root_command_t }} from template"
  template: src=vimrc.command-t.j2 dest="{{ vim_root_command_t }}" owner=root group=root mode=0644
  become: yes
  when: '"wincent/command-t" in vim_github_plugins'
  tags: vim

- name: "[system] Generating {{ vim_root_devicons }} from template"
  template: src=vimrc.devicons.j2 dest="{{ vim_root_devicons }}" owner=root group=root mode=0644
  become: yes
  when: '"ryanoasis/vim-devicons" in vim_github_plugins'
  tags: vim

- name: "[system] Copying .vim folder to /var/lib/vim/addons/"
  copy: src=vim/ dest=/var/lib/vim/addons/
  become: yes
  tags: vim

# remove the old /root/.vim directory for idempotent plugin installation with vundle
# needed for system-wide installation only
- name: "[system] removing old /root/.vim directory if present"
  file: path=/root/.vim state=absent
  become: yes
  tags: vim

- name: '[system] Setting EDITOR and TERM environment variables'
  blockinfile:
    path: /etc/profile.d/env_var.sh
    follow: yes
    create: yes
    mode: 0644
    owner: root
    group: root
    content: |
      export EDITOR="/usr/bin/vim visudo"
      export TERM="xterm-256color"  # For vim colors in tmux
    marker: "# {mark} ======== VIM role: Ansible managed block ========="
  become: yes
  tags: vim

- name: "[system] Installing Vundle"
  git:
    repo: https://github.com/gmarik/Vundle.vim.git
    dest: /var/lib/vim/addons/Vundle.vim
    version: "{{ vim_vundle_version }}"
  become: yes
  tags: vim

# IF this task just hangs, when using:
#   command: "vim +PluginInstall +qal"
#
# this may be because of two things:
#   EITHER .vimrc or .vim files permissions (see 'which sudo' and become_method: su )
#   OR errors in .vimrc
#
# Instead of command: "vim +PluginInstall +qall" we can use:
#
# shell:
#   vim -E -s -c "source /etc/vim/vimrc" -c PluginInstall -c qa
# ignore_errors: yes
#
# For troubleshooting add -V switch to this command and run it directly on the target
- name: '[system] Downloading plugins'
  command: 'vim -E -s -c "source /etc/vim/vimrc" -c PluginInstall -c qa'
  become: yes
  tags: vim
...
